InternalClassType: Comment
Cont: |+1
 
 
 var workareaTable : object := Layout_Data
 var rowWA, rowCO : integer
 var bLengthOriented, bGetCapacity : boolean
 var station : object
 var	tm : real[4,4]
 
 check_CreatedObjects
 
 if Import_History.ydim > 1
 	
 
 	var Changes : table := Import_History["Changes", Import_History.ydim]
 	var Connectors : table := Import_History["Connector_List", Import_History.ydim]
 
 
 	if Changes.ydim > 0 then
 	
 		for var i := 1 to Changes.yDim
 			
 			var ID : string := Changes["UniqueID", i]
 			Created_Objects.CursorY := 1
 
 		
 			if Created_Objects.find({"UniqueID", *}, ID)  AND Changes["Applied_In_Model", i] = "FALSE"
 				
 				rowCO := Created_Objects.CursorY
 				station := Created_Objects["Link", rowCO]
 			
 				workareaTable.CursorY := 1
 				workareaTable.find({"UniqueID", *}, ID)
 				rowWA := workareaTable.CursorY
 				
 			
 				if (pos("Availability",Changes["Change_Note", i]) > 0 OR pos("MTTR",Changes["Change_Note", i]) > 0 OR 
 						pos("Speed",Changes["Change_Note", i]) > 0 OR pos("Length",Changes["Change_Note", i]) > 0 OR
 						pos("Capacity",Changes["Change_Note", i]) > 0)
 					
 					bLengthOriented := (pos("Speed",Changes["Change_Note", i]) > 0 OR pos("Length",Changes["Change_Note", i]) > 0)
 					bGetCapacity := pos("Capacity",Changes["Change_Note", i]) > 0
 				
 					custom_Methods.write_Resource_Data(current, station, rowWA, bLengthOriented, bGetCapacity, workareaTable) 
 				end
 				
 				var updatePos := FALSE
 			
 				if pos("Abs_Transform",Changes["Change_Note", i]) > 0 AND station.~ = Model_Root AND workareatable["Abs_Transform", rowWA] /= ""
 					tm := make4x4Array(splitStringToNum( workareatable["Rel_Transform", rowWA], " "))
 					updatePos := TRUE
 				elseif pos("Rel_Transform",Changes["Change_Note", i]) > 0 AND station.~ /= Model_Root AND workareatable["Rel_Transform", rowWA] /= ""
 					tm := make4x4Array(splitStringToNum( workareatable["Abs_Transform", rowWA], " "))
 					updatePos := TRUE
 				end
 				if updatePos
 				
 					station._3D.TransformationMatrix  := tm
 				
 					Created_Objects["posx", rowCO]	:= station._3D.Position.X
 					Created_Objects["posy", rowCO]	:= station._3D.Position.Y
 					Created_Objects["posz", rowCO]	:= station._3D.Position.Z
 				end
 
 				Changes["Applied_In_Model", i] := "TRUE"
 			end
 			
 		next		
 	
 		Import_History["Applied_In_Model", Import_History.ydim] := true
 	
 	end
 
 	if Update_Graphics
 		updateResourceGraphics
 	end
 	
 end
Origin: c5ce3683-2ad7-434d-a125-e9ab898a8a5e
SaveAsRichedit: false
UUID: 2cc7cf66-c6b4-4c62-b2db-52336bba297f
