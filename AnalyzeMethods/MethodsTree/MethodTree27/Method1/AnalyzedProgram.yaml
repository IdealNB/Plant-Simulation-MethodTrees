InternalClassType: Comment
Cont: |+1
 
 param  children : string[], Byref opList, prodList : table
 
 var VariantsTab : table
 VariantsTab.create
 VariantsTab.ColumnIndex := true
 
 for var i := 1 to children.dim		
 	var child := children[i]
 	Process_Data.setCursor(1,1)
 	if Process_Data.find({"ID",1}..{"ID",*}, child ) 
 		var row := Process_Data.CursorY
 		
 		if Process_Data.getColumnNo("ConsumedParts") /= -1 AND Process_Data["ConsumedParts", row] /= VOID
 			
 			VariantsTab.delete({1,0}..{*,*}) 
 			var products : string := "" 	
 			
 			for var j := 1 to Process_Data["ConsumedParts", row].yDim
 				var productID := Process_Data["ConsumedParts", row]["InContextID", j]
 				Product_Data.setCursor(1,1)
 				if Product_Data.find({"InContextID",1}..{"InContextID",*}, productID )
 					var pRow := Product_Data.CursorY
 					custom_Methods.get_Variant("product", pRow, VariantsTab, self.~)
 					products := incl(Product_Data["Name", pRow] + ",", products, 1)
 					var prodID := Product_Data["TcItemID", pRow]
 					prodList.setCursor(2,1)
 					if NOT prodList.find({2,1}..{2,*}, prodID)
 						prodList.writeRow(1, prodList.yDim+1, 
 							Product_Data["Name", pRow], 
 							Product_Data["TcItemID", pRow], 
 							when Product_Data["Quantity", pRow] > 0 then Product_Data["Quantity", pRow] else 1)
 					end
 				end
 			next
 			
 			opList.writeRow( 1, opList.YDim+1,
 				Process_Data["Name", row],
 				Process_Data["Time", row],
 				products)
 
 			for var k := 1 to VariantsTab.XDimIndex
 				var vCol := opList.getColumnNo(VariantsTab[k, 0])
 				if  vCol = -1
 					vCol := opList.XDimIndex+1
 					opList[vCol, 0] := VariantsTab[k, 0]
 				end
 				opList[vCol, opList.YDim] := VariantsTab[k, 1]
 			next
 
 		
 		elseif Process_Data.getColumnNo("Variants") /= -1 AND Process_Data["Variants", row] /= VOID
 			
 			VariantsTab.delete({1,0}..{*,*})
 			custom_Methods.get_Variant("process", row, VariantsTab, self.~)
 					
 			opList.writeRow( 1, opList.YDim+1,
 				Process_Data["Name", row],
 				Process_Data["Time", row],
 				"")
 			
 			for var k := 1 to VariantsTab.XDimIndex
 				vCol := opList.getColumnNo(VariantsTab[k, 0])
 				if  vCol = -1
 					vCol := opList.XDimIndex+1
 					opList[vCol, 0] := VariantsTab[k, 0]
 				end
 				opList[vCol, opList.YDim] := VariantsTab[k, 1]
 			next
 
 		else
 			opList.writeRow( 1, opList.YDim+1,
 				Process_Data["Name", row],
 				Process_Data["Time", row],
 				"", "")
 		end
 			
 	else
 		print "Process Id >>", child, "<< not found in table ", Process_Data, "!"
 	end
 	
 next
Origin: c5ce3683-2ad7-434d-a125-e9ab898a8a5e
SaveAsRichedit: false
UUID: 8ca44838-f9b1-45de-9c50-26ca2a937bbc
