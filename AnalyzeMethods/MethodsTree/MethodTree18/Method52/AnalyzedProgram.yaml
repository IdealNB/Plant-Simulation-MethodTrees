InternalClassType: Comment
Cont: |+1
 
 
 var	workareaTableLayout : object := Layout_Data
 var	workareaTableProcess : object := Process_Data
 
 var table_counter : integer := 1
 var level_counter : integer
 var current_Table : table
 var current_children : string[]
 
 if workareaTableLayout.getColumnNo("Level") /= -1
 	var MAX_levels : integer := workareaTableLayout.max({"Level", 1}..{"Level", *})
 else
 	MAX_levels := 0
 end
 
 for level_counter := 0 to MAX_levels loop
 	for var j := 1 to workareaTableLayout.ydim loop
 		if workareaTableLayout["Level", j] = level_counter then
 			tbl_connections.createNestedList("Occ_ID", table_counter, workareaTableLayout["ID", j])
 			tbl_connections["Level", table_counter] := level_counter
 			tbl_connections["Children", table_counter] :=  workareaTableLayout["ChildrenIds", j]
 
 		
 			if workareaTableLayout["PlantSimClass", j] /= "" then
 				tbl_connections["Type", table_counter] := "Resource"
 				tbl_connections["Sequence_Number", table_counter] :=  str_to_num(workareaTableLayout["Sequence_Number", j])
 
 		
 			elseif workareaTableLayout["PlantSimClass", j] = ""
 				tbl_connections["Type", table_counter] := "Area"
 				tbl_connections["Sequence_Number", table_counter] :=  str_to_num(workareaTableLayout["Sequence_Number", j])
 
 			end
 
 			table_counter += 1
 		end
 	next
 next
 
 if tbl_connections.ydim > 0 then
 	
 	for var y := 1 to tbl_connections.ydim loop
 		current_Children.delete
 
 		if tbl_Connections["Children", y] /= "" then
 			current_children := SplitString(tbl_Connections["Children", y], " ")
 			current_table := tbl_connections["Occ_ID", y]
 
 			Iterate_levels(current_table, current_Children, MAX_levels, level_counter, workareaTableLayout, "Resource")
 		end
 	next
 
 end
Origin: c5ce3683-2ad7-434d-a125-e9ab898a8a5e
SaveAsRichedit: false
UUID: 80c8c99b-f300-434e-a777-3afeb6aeff26
