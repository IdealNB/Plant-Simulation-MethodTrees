InternalClassType: Method
Coordinate3D: [44.900000000000006,-5,0]
Name: T_Test
Origin: 62d69426-0905-4e32-a460-c5d135e458cc
Program: |+1
 /* called by: EndOfAllExperiments, dialog
 t = statistic for measuring the significance of a difference of means
 p = small values indicates that the arrays have signifcantly different means.
 called by: Menu ""Analysis of variance",  EndOfAllExperiments
 Bernd Allmendinger - PPI-Informatik, PS
 */
 param obj:object -> boolean -- obj = DataTable 'pValues'
 
 obj.delete({0,0}..{*,*})
 var s:string := obj.OutputValue
 var col:integer := detailedResults.getColumnNo(s)
 if col < 1  
 	s := ValueDescriptions.get(s)
 	col := detailedResults.getColumnNo(s)
 	if col < 1 then return; end
 end
 
 var nExp:integer := detailedResults.yDim
 var k:integer
 for var j := 1 to nExp 
 	if detailedResults[col+1,j]>0  -- random output: standardDeviation > 0
 		k += 1 -- only Exp with not constant samples are shown
 		s := detailedResults[0,j] -- like "Exp 03"
 		if j < nExp then obj[0,k] := s;end
 		if j>1 then obj[k-1,0] := s;end
 	end
 next -- j
 
 -- k = number of random experiments for the 'outputStr'
 result := (k>1)
 if NOT result then return end
 var mX,mY,sX,sY,t,vX,vY,p,F_t,df,h:real
 var n:integer := NumRuns
 for var j := 1 to obj.XdimIndex
 	s := obj[j,0] -- like "Exp 03"
 	mX := detailedResults[col,s]-- MeanValue of Exp X
 	sX := detailedResults[col+1,s]-- standardDeviation of Exp X
 	vX := sX * sX -- variance of Exp X
 	for k := 1 to j 
 		s := obj[0,k]-- like "Exp 03"
 		mY := detailedResults[col,s]-- MeanValue of Exp Y
 		sY := detailedResults[col+1,s]-- standardDeviation of Exp X			
 		vY := sY * sY -- variance of Exp Y
 		t := abs(mX - mY)/ sqrt((vX + vY)/n)-- test statistic 
 
 		if abs(sX - sY) < 0.1 * max(sX,sY) 
 			-- assume equal variance
 			df := 2 * (n-1)
 		else -- assume different variance (df is a real number, the results are as in Excel)
 			df := (n-1) * obj.SQR(vX + vY)/(obj.SQR(vX) + obj.SQR(vY))
 		end
 		h := sqrt(t * t + df)
 		F_t := betai(df/2, df/2, (t + h)/(2 * h))
 		p := 2 * (1 - F_t)
 		--print "Variance analysis for ",obj[j,0]," and ",obj[0,k]," for output \\"",detailedResults[col,0],"\\"";
 		obj[j,k] := to_str(round(p,3))
 	next -- k
 next -- j
 
 if obj.YdimIndex > obj.ydim 
 	obj.cutRow(obj.YdimIndex)
 end
 obj[0,0]:=""
RandomSeed: 171
UUID: 65f3e3f2-6d10-4bb5-b35d-320c1c2501fe
